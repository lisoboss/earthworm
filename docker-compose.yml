version: "3.8"

services:
  client:
    image: local/earthworm/client:latest
    build: 
      context: .
      target: client
      args:
        - CLARITY=${CLARITY}
    restart: always
    depends_on:
      - logto
      - api
    ports:
      - 127.0.0.1:3012:80
  api:
    image: local/earthworm/api:latest
    build: 
      context: .
      target: api
    restart: always
    depends_on:
      - db
      - redis
      - logto
    env_file: "./apps/api/.env"
    ports:
      - 127.0.0.1:3013:3001
  db:
    restart: always
    image: postgres:14-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      POSTGRES_DB: earthworm
    volumes:
      - data:/var/lib/postgres/main-data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:5-alpine
    restart: always
    volumes:
      - data:/var/lib/redis
  logto:
    restart: always
    depends_on:
      logtodb:
        condition: service_healthy
    image: svhd/logto:1.20.0
    entrypoint: ["sh", "-c", "npm run cli db seed -- --swe && npm start"]
    ports:
      - 127.0.0.1:3010:3001
      - 127.0.0.1:3011:3002
    environment:
      - TRUST_PROXY_HEADER=1
      - DB_URL=postgres://postgres:${LOGTO_POSTGRES_PASSWORD}@logtodb:5432/logto
      - ENDPOINT=${LOGTO_ENDPOINT}
      - ADMIN_ENDPOINT=${LOGTO_ADMIN_ENDPOINT}
  logtodb:
    restart: always
    image: postgres:14-alpine
    user: root
    volumes:
      - "./.volumes/logto_db:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${LOGTO_POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  data:
    driver: local
